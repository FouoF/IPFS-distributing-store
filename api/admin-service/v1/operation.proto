syntax = "proto3";

package adminservice.v1;

import "google/api/annotations.proto";
import "admin-service/v1/types.proto";

option go_package = "ipfs-store/api/admin-service/v1;v1";

// The operation service definition.
service Operation {
  rpc ListNode (ListNodeRequest) returns (ListNodeReply) {
    option (google.api.http) = {
      get: "/admin/node/list"
    };
  }

  rpc AddNode (AddNodeRequest) returns (AddNodeReply) {
    option (google.api.http) = {
      post: "/admin/node/add"
      body: "*"
    };
  }

  rpc RemoveNode (RemoveNodeRequest) returns (RemoveNodeReply) {
    option (google.api.http) = {
      post: "/admin/node/remove"
      body: "*"
    };
  }

  rpc ListEndpoint (ListEndpointRequest) returns (ListEndpointReply) {
    option (google.api.http) = {
      get: "/admin/endpoint/list"
    };
  }

  rpc GetEndpoint (GetEndpointRequest) returns (GetEndpointReply) {
    option (google.api.http) = {
      get: "/admin/endpoint/get"
    };
  }

  rpc AddEndpoint (AddEndpointRequest) returns (AddEndpointReply) {
    option (google.api.http) = {
      post: "/admin/endpoint/add"
      body: "*"
    };
  }

  rpc RemoveEndpoint (RemoveEndpointRequest) returns (RemoveEndpointReply) {
    option (google.api.http) = {
      post: "/admin/endpoint/remove"
      body: "*"
    };
  }

  rpc CreateIndex (CreateIndexRequest) returns (CreateIndexReply) {
    option (google.api.http) = {
      post: "/admin/index/create"
      body: "*"
    };
  }

  rpc ListIndex (ListIndexRequest) returns (ListIndexReply) {
    option (google.api.http) = {
      get: "/admin/index/list"
    };
  }

  rpc ListLeaf (ListLeafRequest) returns(ListLeafReply) {
    option (google.api.http) = {
      get: "/admin/index/listleaf"
    };
  }
}

message ListNodeRequest {

}

message ListNodeReply {
  repeated Node node = 1;
}

message AddNodeRequest {
  Node node = 1;
}

message AddNodeReply {
}

message RemoveNodeRequest {
  string name = 1;
  string addr = 2;
}

message RemoveNodeReply {
}

message ListEndpointRequest {

}

message ListEndpointReply {
  repeated Endpoint endpoint = 1;
}

message AddEndpointRequest {
  Endpoint endpoint = 1;
}

message AddEndpointReply {
}

message RemoveEndpointRequest {
  string addr = 1;
}

message RemoveEndpointReply {
}

message GetEndpointRequest {
  Index index = 1;
}

message GetEndpointReply {
  repeated Endpoint endpoint = 1;
}

message CreateIndexRequest {
  Index index = 1;
}

message CreateIndexReply {
}

message ListIndexRequest {
  Index index = 1;
}

message ListIndexReply {
  repeated string index = 1;
}

message ListLeafRequest {
  Index index = 1;
}

message ListLeafReply {
  repeated Leaf leaf = 1;
}